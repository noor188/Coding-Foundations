
;; cat-starter.rkt

; 
; PROBLEM:
; 
; Use the How to Design Worlds recipe to design an interactive
; program in which a cat starts at the left edge of the display 
; and then walks across the screen to the right. When the cat
; reaches the right edge it should just keep going right off 
; the screen.
; 
; Once your design is complete revise it to add a new feature,
; which is that pressing the space key should cause the cat to
; go back to the left edge of the screen. When you do this, go
; all the way back to your domain analysis and incorporate the
; new feature.
; 
; To help you get started, here is a picture of a cat, which we
; have taken from the 2nd edition of the How to Design Programs 
; book on which this course is based.
; 
; .
; 


(require 2htdp/image)
(require 2htdp/universe)

;; Cat moves across the screen from left to right

;; =================
;; Constants:
(define WIDTH  600)
(define HEIGHT 400)
(define CTR-Y (/ HEIGHT 2))
(define MTS (empty-scene WIDTH HEIGHT))

(define CAT-IMG .)


;; =================
;; Data definitions:

;; CatX is Number
;; interp. x postion of cat in screen coordinates
(define CX1 0)           ; left edge
(define CX2 (/ WIDTH 2)) ; middle
(define CX3 WIDTH)       ; right edge
#;
(define (fn-for-catx CX)
  (... CX))

;; Template Rules used:
;; - Atomic Non-Distinct: Number

;; =================
;; Functions:

;; CatX -> Images
;; on every tick it calculates next CatX position and renders the cat image onto that postion
;; 
(define (main CX)
  (big-bang CX                      ; CatX
            (on-tick   advance-cat) ; CatX -> CatX
            (to-draw   render)))    ; CatX -> Image
           

;; CatX -> CatX
;; produce the next CatX postion, by advancing it 1 pixel to right
;; !!!
(define (advance-cat CX) 0)


;; CatX -> Image
;; render the CAT-IMG at the appropriate place on MTS 
;; !!!
(define (render Cx) MTS)